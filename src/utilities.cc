#include "utilities.hpp"

namespace Quoil {
  void GenCerts(std::string pkey_filename, std::string cert_filename) {
    std::ofstream pkey_out(pkey_filename);
    std::ofstream cert_out(cert_filename);

    std::unique_ptr<Botan::RandomNumberGenerator> rng;
    #if defined(BOTAN_HAS_SYSTEM_RNG)
    rng.reset(new Botan::System_RNG);
    #else
    rng.reset(new Botan::AutoSeeded_RNG);
    #endif

    Botan::RSA_PrivateKey pkey = Botan::RSA_PrivateKey(*rng, 2048);
    Botan::X509_Cert_Options self_options = Botan::X509_Cert_Options("localhost");
    Botan::X509_Certificate cert = Botan::X509::create_self_signed_cert(self_options, pkey, "SHA-256", *rng);

    pkey_out <<  Botan::PKCS8::PEM_encode(pkey);
    cert_out <<  cert.PEM_encode();
  }

  void SetupWizard() {
    YAML::Emitter out;
    std::string server_name = "This server has no name", server_port = "50051", discovery_port = "8899";
    std::ofstream out_config("config.yaml");
    std::cout << R"(
    _    __           __        __       
    | |  / /___ ______/ /___  __/ /_  ___ 
    | | / / __ `/ ___/ __/ / / / __ \/ _ \
    | |/ / /_/ / /__/ /_/ /_/ / /_/ /  __/
    |___/\__,_/\___/\__/\__,_/_.___/\___/ 
                                          
    Thank you for using vactube, the self hosted alternative to cloud voice/video platforms.
    We'll get you setup in no time. Just a few questions here and there and you'll be ready to connect!
    If you ever need to change your settings, feel free to edit the yaml file generated by this wizard.
    
    )" << std::endl;
    std::cout << "First thing first: what do you want your server to be named? ";
    getline(std::cin, server_name,'\n');
    std::cout << "What port do you want the voice and chat server to listen on? ";
    getline(std::cin, server_port,'\n');
    std::cout << "What port do you want the discovery server to listen on? ";
    getline(std::cin, discovery_port,'\n');
    
    out << YAML::BeginDoc << YAML::BeginMap;
    out << YAML::Key << "server_name" << YAML::DoubleQuoted << server_name;
    out << YAML::Key << "server_address" << YAML::DoubleQuoted << "0.0.0.0:" + server_port;
    out << YAML::Key << "discovery_port" << YAML::Value << discovery_port;
    out << YAML::Key << "ssl" << YAML::BeginMap;
    out << YAML::Key << "key" << YAML::DoubleQuoted << "key.pem";
    out << YAML::Key << "cert" << YAML::DoubleQuoted << "cert.pem" << YAML::EndMap;
    out << YAML::EndMap << YAML::EndDoc;

    out_config << std::string(out.c_str());
    GenCerts();
    out_config.flush();
    std::cout << "The configuration has been written to config.yaml. With that, vactube is ready" << std::endl;
  }

  std::string ReadFile(const std::string filename) {
    std::ifstream t(filename);
    std::stringstream buffer;
    buffer << t.rdbuf();
    return buffer.str();
  }
}